import React from 'react';\nimport { Card } from '../ui/Card';\nimport { LoadingSpinner } from '../ui/LoadingSpinner';\nimport { Button } from '../ui/Button';\nimport { CheckCircle, AlertTriangle, RefreshCw, Clock } from 'lucide-react';\n\ninterface ProcessingStatusProps {\n  status: string;\n  progress: number;\n  onCheckStatus: () => void;\n}\n\nconst ProcessingStatus: React.FC<ProcessingStatusProps> = ({\n  status,\n  progress,\n  onCheckStatus\n}) => {\n  const getStatusIcon = () => {\n    if (status.includes('completado') || status.includes('Completado')) {\n      return <CheckCircle className=\"w-8 h-8 text-green-500\" />;\n    } else if (status.includes('error') || status.includes('Error')) {\n      return <AlertTriangle className=\"w-8 h-8 text-red-500\" />;\n    } else {\n      return <LoadingSpinner size=\"large\" />;\n    }\n  };\n\n  const getStatusColor = () => {\n    if (status.includes('completado') || status.includes('Completado')) {\n      return 'text-green-700';\n    } else if (status.includes('error') || status.includes('Error')) {\n      return 'text-red-700';\n    } else {\n      return 'text-blue-700';\n    }\n  };\n\n  const getProgressBarColor = () => {\n    if (status.includes('completado') || status.includes('Completado')) {\n      return 'bg-green-500';\n    } else if (status.includes('error') || status.includes('Error')) {\n      return 'bg-red-500';\n    } else {\n      return 'bg-blue-500';\n    }\n  };\n\n  return (\n    <Card className=\"p-8\">\n      <div className=\"text-center space-y-6\">\n        {/* Icono de estado */}\n        <div className=\"flex justify-center\">\n          {getStatusIcon()}\n        </div>\n\n        {/* Mensaje de estado */}\n        <div>\n          <h3 className={`text-lg font-semibold ${getStatusColor()}`}>\n            Procesamiento de Archivo\n          </h3>\n          <p className=\"text-gray-600 mt-2\">\n            {status}\n          </p>\n        </div>\n\n        {/* Barra de progreso */}\n        <div className=\"w-full\">\n          <div className=\"flex justify-between text-sm text-gray-600 mb-2\">\n            <span>Progreso</span>\n            <span>{Math.round(progress)}%</span>\n          </div>\n          <div className=\"w-full bg-gray-200 rounded-full h-3\">\n            <div\n              className={`h-3 rounded-full transition-all duration-300 ${getProgressBarColor()}`}\n              style={{ width: `${progress}%` }}\n            />\n          </div>\n        </div>\n\n        {/* Información adicional */}\n        <div className=\"bg-blue-50 border border-blue-200 rounded-lg p-4\">\n          <div className=\"flex items-center text-blue-700\">\n            <Clock className=\"w-5 h-5 mr-2\" />\n            <span className=\"text-sm\">\n              El procesamiento puede tomar entre 1-3 minutos dependiendo del tamaño del archivo\n            </span>\n          </div>\n        </div>\n\n        {/* Botón de verificación */}\n        <div className=\"pt-4\">\n          <Button\n            onClick={onCheckStatus}\n            variant=\"outline\"\n            className=\"mx-auto\"\n          >\n            <RefreshCw className=\"w-4 h-4 mr-2\" />\n            Verificar Estado\n          </Button>\n        </div>\n\n        {/* Estados específicos */}\n        {status.includes('error') && (\n          <div className=\"bg-red-50 border border-red-200 rounded-lg p-4\">\n            <div className=\"text-red-700 text-sm\">\n              <p className=\"font-medium\">¿Qué puedes hacer?</p>\n              <ul className=\"mt-2 space-y-1 list-disc list-inside\">\n                <li>Verifica que el archivo sea un Excel válido (.xlsx o .xls)</li>\n                <li>Asegúrate de que contiene datos de información exógena</li>\n                <li>Intenta con un archivo más pequeño si el actual es muy grande</li>\n                <li>Contacta soporte si el problema persiste</li>\n              </ul>\n            </div>\n          </div>\n        )}\n\n        {status.includes('completado') && (\n          <div className=\"bg-green-50 border border-green-200 rounded-lg p-4\">\n            <div className=\"text-green-700 text-sm\">\n              <p className=\"font-medium\">¡Procesamiento exitoso!</p>\n              <p className=\"mt-1\">\n                Tu archivo ha sido procesado correctamente. Puedes continuar con la revisión de los datos.\n              </p>\n            </div>\n          </div>\n        )}\n      </div>\n    </Card>\n  );\n};\n\nexport default ProcessingStatus;